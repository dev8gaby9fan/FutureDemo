apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'com.didi.dokit'
android {
    compileSdkVersion rootProject.ext.build_versions.compile_sdk
    defaultConfig {
        applicationId "com.fsh.future"
        minSdkVersion rootProject.ext.build_versions.min_sdk
        targetSdkVersion rootProject.ext.build_versions.target_sdk
        versionCode rootProject.ext.app_info.version_code
        versionName rootProject.ext.app_info.version_name
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        my_signing {
            storeFile new File(rootDir, "mykeystore.jks")
            storePassword '12345678'
            keyAlias 'tradeapp'
            keyPassword '12345678'
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            signingConfig signingConfigs.my_signing
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled false
            signingConfig signingConfigs.my_signing
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }
    lintOptions {
        abortOnError false
    }
}
dokitExt {
    //整个dokit的插件开关
    dokitPluginSwitch = true
    //函数耗时的开关
    slowMethodSwitch = false
    //大图检测的开关
    bigImgSwitch = false
    //函数耗时的自定义阈值 单位为ms 1000ms = 1s
    thresholdTime = 200
    //在指定的包名业务代码下插入代码
    packageNames = ["com.didichuxing.doraemondemo"]
    //慢函数 黑名单 可以是包名 也可以是全路径的类名
//    methodBlacklist = ["com.didichuxing.doraemondemo.dokit"]
}
dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    testImplementation deps.test.junit
    androidTestImplementation deps.test.ext
    androidTestImplementation deps.test.espresso_core
    implementation project(":lib_common")
    implementation project(":model_main")
    if(!quoteIsApp.toBoolean()){
        implementation project(":module_quote")
    }
    if(!tradeIsApp.toBoolean()){
        implementation project(":module_trade")
    }
//
//
}
